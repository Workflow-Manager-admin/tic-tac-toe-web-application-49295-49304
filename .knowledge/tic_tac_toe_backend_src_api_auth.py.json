{"is_source_file": true, "format": "Python", "description": "This Python source file contains authentication utilities for a FastAPI backend, including user registration, login, JWT token creation and verification, and dependencies for authenticated routes.", "external_files": ["crud", "database", "models", "schemas"], "external_methods": ["crud.get_user_by_username", "database.get_db"], "published": ["verify_password", "get_password_hash", "create_access_token", "decode_access_token", "get_current_user"], "classes": [{"name": "TokenResponse", "description": "Response model containing the JWT token and token type."}, {"name": "UserLogin", "description": "Schema representing login credentials with username and password."}], "methods": [{"name": "register(user: schemas.UserCreate, db: Session = Depends(database.get_db))", "description": "Endpoint to register a new user, ensuring username uniqueness.", "scope": "", "scopeKind": ""}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(database.get_db))", "description": "Endpoint to authenticate user and return a JWT token.", "scope": "", "scopeKind": ""}, {"name": "auth_me(current_user: models.User = Depends(get_current_user))", "description": "Endpoint to get the current authenticated user's profile.", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "decode_access_token(token: str)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "models.User get_current_user( token: str = Depends(oauth2_scheme), db: Session = Depends(database.get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "get_password_hash(password)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "verify_password(plain_password, hashed_password)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["crud.get_user_by_username", "database.get_db", "crud.create_user", "verify_password", "create_access_token", "decode_access_token"], "search-terms": ["auth", "JWT", "token", "register", "login", "get_current_user", "OAuth2PasswordBearer"], "state": 2, "file_id": 9, "knowledge_revision": 23, "git_revision": "", "ctags": [{"_type": "tag", "name": "JWT_ALGORITHM", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^JWT_ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^JWT_EXPIRE_MINUTES = 60 * 24  # 1 day$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_SECRET_KEY", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^JWT_SECRET_KEY = os.environ.get(\"JWT_SECRET_KEY\", \"your-secret-key\")  # Should be set in environ/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "TokenResponse", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^class TokenResponse(schemas.BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserLogin", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^class UserLogin(schemas.BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "auth_me", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^def auth_me(current_user: models.User = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: models.User = Depends(get_current_user))"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "decode_access_token", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^def decode_access_token(token: str):$/", "language": "Python", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^def get_current_user($/", "language": "Python", "typeref": "typename:models.User", "kind": "function", "signature": "( token: str = Depends(oauth2_scheme), db: Session = Depends(database.get_db) )"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^def get_password_hash(password):$/", "language": "Python", "kind": "function", "signature": "(password)"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(database.get_d/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(database.get_db))"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^def register(user: schemas.UserCreate, db: Session = Depends(database.get_db)):$/", "language": "Python", "kind": "function", "signature": "(user: schemas.UserCreate, db: Session = Depends(database.get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^router = APIRouter(prefix=\"\\/auth\", tags=[\"Authentication\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^    token_type: str = \"bearer\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TokenResponse", "scopeKind": "class"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/auth.py", "pattern": "/^def verify_password(plain_password, hashed_password):$/", "language": "Python", "kind": "function", "signature": "(plain_password, hashed_password)"}], "hash": "fb20899009b0b8a8466382ae69b4ee12", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/src/api/auth.py", "fields": [{"name": "JWT_ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_EXPIRE_MINUTES = 60 * 24  # 1 day", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_SECRET_KEY = os.environ.get(\"JWT_SECRET_KEY\", \"your-secret-key\")  # Should be set in environ/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter(prefix=\"\\/auth\", tags=[\"Authentication\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str token_type", "scope": "TokenResponse", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"23": ""}]}