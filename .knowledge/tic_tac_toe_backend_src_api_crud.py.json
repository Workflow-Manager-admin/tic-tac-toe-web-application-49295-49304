{"is_source_file": true, "format": "Python", "description": "This file contains CRUD (Create, Read, Update, Delete) operations for managing users, games, and moves in a Tic-Tac-Toe web application backend. It uses SQLAlchemy for database interactions, schemas for data validation, and password hashing for user security.", "external_files": ["models", "schemas"], "external_methods": ["db.query", "db.add", "db.commit", "db.refresh", "pwd_context.hash", "or_"], "published": ["get_user_by_id", "get_user_by_username", "create_user", "create_game", "get_game", "list_games_for_user", "add_move", "list_moves_for_game"], "classes": [], "methods": [{"name": "Optional[models.User] get_user_by_id(db: Session, user_id: int)", "description": "Fetch a user by ID.", "scope": "", "scopeKind": ""}, {"name": "Optional[models.User] get_user_by_username(db: Session, username: str)", "description": "Fetch a user by username.", "scope": "", "scopeKind": ""}, {"name": "models.User create_user(db: Session, user: schemas.UserCreate)", "description": "Create a new user with hashed password.", "scope": "", "scopeKind": ""}, {"name": "models.Game create_game(db: Session, owner_id: int, opponent_id: Optional[int] = None)", "description": "Create a new game with owner and optional opponent.", "scope": "", "scopeKind": ""}, {"name": "Optional[models.Game] get_game(db: Session, game_id: int)", "description": "Fetch game by ID.", "scope": "", "scopeKind": ""}, {"name": "list_games_for_user(db: Session, user_id: int)", "description": "List all games for a user (as owner or opponent).", "scope": "", "scopeKind": ""}, {"name": "models.Move add_move( db: Session, game_id: int, move: schemas.MoveCreate )", "description": "Record a move in a given game.", "scope": "", "scopeKind": ""}, {"name": "list_moves_for_game(db: Session, game_id: int)", "description": "Get all moves for the specified game.", "scope": "", "scopeKind": ""}], "calls": ["db.query", "db.add", "db.commit", "db.refresh", "pwd_context.hash", "or_", "db.query(models.User)", "db.query(models.Game)", "db.query(models.Move)"], "search-terms": ["CRUD operations", "User management", "Game management", "Move management", "SQLAlchemy ORM", "password hashing", "Tic Tac Toe backend"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "add_move", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/crud.py", "pattern": "/^def add_move($/", "language": "Python", "typeref": "typename:models.Move", "kind": "function", "signature": "( db: Session, game_id: int, move: schemas.MoveCreate )"}, {"_type": "tag", "name": "create_game", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/crud.py", "pattern": "/^def create_game(db: Session, owner_id: int, opponent_id: Optional[int] = None) -> models.Game:$/", "language": "Python", "typeref": "typename:models.Game", "kind": "function", "signature": "(db: Session, owner_id: int, opponent_id: Optional[int] = None)"}, {"_type": "tag", "name": "create_user", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/crud.py", "pattern": "/^def create_user(db: Session, user: schemas.UserCreate) -> models.User:$/", "language": "Python", "typeref": "typename:models.User", "kind": "function", "signature": "(db: Session, user: schemas.UserCreate)"}, {"_type": "tag", "name": "get_game", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/crud.py", "pattern": "/^def get_game(db: Session, game_id: int) -> Optional[models.Game]:$/", "language": "Python", "typeref": "typename:Optional[models.Game]", "kind": "function", "signature": "(db: Session, game_id: int)"}, {"_type": "tag", "name": "get_user_by_id", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/crud.py", "pattern": "/^def get_user_by_id(db: Session, user_id: int) -> Optional[models.User]:$/", "language": "Python", "typeref": "typename:Optional[models.User]", "kind": "function", "signature": "(db: Session, user_id: int)"}, {"_type": "tag", "name": "get_user_by_username", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/crud.py", "pattern": "/^def get_user_by_username(db: Session, username: str) -> Optional[models.User]:$/", "language": "Python", "typeref": "typename:Optional[models.User]", "kind": "function", "signature": "(db: Session, username: str)"}, {"_type": "tag", "name": "list_games_for_user", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/crud.py", "pattern": "/^def list_games_for_user(db: Session, user_id: int):$/", "language": "Python", "kind": "function", "signature": "(db: Session, user_id: int)"}, {"_type": "tag", "name": "list_moves_for_game", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/crud.py", "pattern": "/^def list_moves_for_game(db: Session, game_id: int):$/", "language": "Python", "kind": "function", "signature": "(db: Session, game_id: int)"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-application-49295-49304/tic_tac_toe_backend/src/api/crud.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}], "hash": "450edac282f623c95b3776851f58924a", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/src/api/crud.py", "fields": [{"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"15": ""}]}